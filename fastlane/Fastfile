
default_platform(:ios)

platform :ios do

  lane :catch do
    snapshot
  end

  lane :lint do
    oclint(
      compile_commands: "commands.json",    # The JSON compilation database, use xctool reporter "json-compilation-database"
      select_regex: /ViewController.m/,     # Select all files matching this regex
      exclude_regex: /Test.m/,    # Exclude all files matching this regex
      report_type: "pmd",         # The type of the report (default: html)
      max_priority_1: 10,         # The max allowed number of priority 1 violations
      max_priority_2: 100,        # The max allowed number of priority 2 violations
      max_priority_3: 1000,       # The max allowed number of priority 3 violations
      thresholds: [     # Override the default behavior of rules
        "LONG_LINE=200",
        "LONG_METHOD=200"
      ],
      enable_rules: [   # List of rules to pick explicitly
        "DoubleNegative",
        "SwitchStatementsDon'TNeedDefaultWhenFullyCovered"
      ],
      disable_rules: ["GotoStatement"],     # List of rules to disable
      list_enabled_rules: true,   # List enabled rules
      enable_clang_static_analyzer: true,   # Enable Clang Static Analyzer, and integrate results into OCLint report
      enable_global_analysis: true,         # Compile every source, and analyze across global contexts (depends on number of source files, could results in high memory load)
      allow_duplicated_violations: true     # Allow duplicated violations in the OCLint report
    )
  end

  #it works!
  lane :run_test do
    run_tests(scheme: 'FastlaneDemoTests')
  end

  lane :build do
    # increment_build_number
    increment_build_number_in_plist(
      scheme: 'FastlaneDemo'
    )
    get_certificates(
      output_path: './cer'
    )
    get_provisioning_profile(
      adhoc: true,
      output_path: './cer'
    )

    gym(
      export_method: 'ad-hoc',
      clean: true,
      include_symbols: false,
      include_bitcode: false,
      silent: true,
      scheme: 'FastlaneDemo',
      output_directory: './build'
    )
    # firim(firim_api_token: 'a8787d3513611ed7ee0ac0ed15f9f005')
  end

end
